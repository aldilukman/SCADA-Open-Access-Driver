/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class PassengerInformationServer : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PassengerInformationServer(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PassengerInformationServer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PassengerInformationServer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_PassengerInformationServer(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public PassengerInformationServer() : this(netspireSDKPINVOKE.new_PassengerInformationServer(), true) {
  }

  public bool getServerStatus() {
    bool ret = netspireSDKPINVOKE.PassengerInformationServer_getServerStatus(swigCPtr);
    return ret;
  }

  public LineList getLines() {
    LineList ret = new LineList(netspireSDKPINVOKE.PassengerInformationServer_getLines(swigCPtr), true);
    return ret;
  }

  public VehicleList getVehicles() {
    VehicleList ret = new VehicleList(netspireSDKPINVOKE.PassengerInformationServer_getVehicles(swigCPtr), true);
    return ret;
  }

  public StationList getStations() {
    StationList ret = new StationList(netspireSDKPINVOKE.PassengerInformationServer_getStations(swigCPtr), true);
    return ret;
  }

  public PlatformInfoList getPlatforms() {
    PlatformInfoList ret = new PlatformInfoList(netspireSDKPINVOKE.PassengerInformationServer_getPlatforms(swigCPtr), true);
    return ret;
  }

  public TripList getTrips() {
    TripList ret = new TripList(netspireSDKPINVOKE.PassengerInformationServer_getTrips(swigCPtr), true);
    return ret;
  }

  public TripStopList getTripStops() {
    TripStopList ret = new TripStopList(netspireSDKPINVOKE.PassengerInformationServer_getTripStops(swigCPtr), true);
    return ret;
  }

  public ServiceList getServices() {
    ServiceList ret = new ServiceList(netspireSDKPINVOKE.PassengerInformationServer_getServices(swigCPtr), true);
    return ret;
  }

  public ServiceStopList getServiceStops() {
    ServiceStopList ret = new ServiceStopList(netspireSDKPINVOKE.PassengerInformationServer_getServiceStops(swigCPtr), true);
    return ret;
  }

  public void registerObserver(PassengerInformationObserver observer) {
    netspireSDKPINVOKE.PassengerInformationServer_registerObserver(swigCPtr, PassengerInformationObserver.getCPtr(observer));
  }

}

}
