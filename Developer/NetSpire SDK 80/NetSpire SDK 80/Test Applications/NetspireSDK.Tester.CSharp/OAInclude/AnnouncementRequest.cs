/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class AnnouncementRequest : Message {
  private HandleRef swigCPtr;

  internal AnnouncementRequest(IntPtr cPtr, bool cMemoryOwn) : base(netspireSDKPINVOKE.AnnouncementRequest_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(AnnouncementRequest obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~AnnouncementRequest() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_AnnouncementRequest(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public int id {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_id_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.AnnouncementRequest_id_get(swigCPtr);
      return ret;
    } 
  }

  public string stateText {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_stateText_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.AnnouncementRequest_stateText_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string startDateTime {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_startDateTime_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.AnnouncementRequest_startDateTime_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string messageContent {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_messageContent_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.AnnouncementRequest_messageContent_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string priorityText {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_priorityText_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.AnnouncementRequest_priorityText_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public StringArray zones {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_zones_set(swigCPtr, StringArray.getCPtr(value));
    } 
    get {
      IntPtr cPtr = netspireSDKPINVOKE.AnnouncementRequest_zones_get(swigCPtr);
      StringArray ret = (cPtr == IntPtr.Zero) ? null : new StringArray(cPtr, false);
      return ret;
    } 
  }

  public string completionCode {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_completionCode_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.AnnouncementRequest_completionCode_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string completionMsg {
    set {
      netspireSDKPINVOKE.AnnouncementRequest_completionMsg_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.AnnouncementRequest_completionMsg_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public AnnouncementRequest() : this(netspireSDKPINVOKE.new_AnnouncementRequest__SWIG_0(), true) {
  }

  public AnnouncementRequest(AnnouncementRequest reqAnother) : this(netspireSDKPINVOKE.new_AnnouncementRequest__SWIG_1(AnnouncementRequest.getCPtr(reqAnother)), true) {
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
