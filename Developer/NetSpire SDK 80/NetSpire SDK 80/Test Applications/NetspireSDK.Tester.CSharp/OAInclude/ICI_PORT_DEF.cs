/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class ICI_PORT_DEF : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ICI_PORT_DEF(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ICI_PORT_DEF obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ICI_PORT_DEF() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_ICI_PORT_DEF(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int state {
    set {
      netspireSDKPINVOKE.ICI_PORT_DEF_state_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ICI_PORT_DEF_state_get(swigCPtr);
      return ret;
    } 
  }

  public string portDescription {
    set {
      netspireSDKPINVOKE.ICI_PORT_DEF_portDescription_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.ICI_PORT_DEF_portDescription_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string portIntExt {
    set {
      netspireSDKPINVOKE.ICI_PORT_DEF_portIntExt_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.ICI_PORT_DEF_portIntExt_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ICI_PORT_DEF() : this(netspireSDKPINVOKE.new_ICI_PORT_DEF__SWIG_0(), true) {
  }

  public ICI_PORT_DEF(int state, string desc, string intExt) : this(netspireSDKPINVOKE.new_ICI_PORT_DEF__SWIG_1(state, desc, intExt), true) {
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICI_PORT_DEF(ICI_PORT_DEF iciDefAnother) : this(netspireSDKPINVOKE.new_ICI_PORT_DEF__SWIG_2(ICI_PORT_DEF.getCPtr(iciDefAnother)), true) {
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
