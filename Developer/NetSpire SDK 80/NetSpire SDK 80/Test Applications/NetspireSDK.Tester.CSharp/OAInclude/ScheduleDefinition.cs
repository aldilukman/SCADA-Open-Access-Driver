/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class ScheduleDefinition : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ScheduleDefinition(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ScheduleDefinition obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ScheduleDefinition() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_ScheduleDefinition(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public ScheduleDefinition() : this(netspireSDKPINVOKE.new_ScheduleDefinition__SWIG_0(), true) {
  }

  public ScheduleDefinition(ScheduleDefinition scheduleDefinitionAnother) : this(netspireSDKPINVOKE.new_ScheduleDefinition__SWIG_1(ScheduleDefinition.getCPtr(scheduleDefinitionAnother)), true) {
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

  public int Id {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_Id_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_Id_get(swigCPtr);
      return ret;
    } 
  }

  public string descrption {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_descrption_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.ScheduleDefinition_descrption_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int startYear {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_startYear_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_startYear_get(swigCPtr);
      return ret;
    } 
  }

  public int startMonth {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_startMonth_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_startMonth_get(swigCPtr);
      return ret;
    } 
  }

  public int startDay {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_startDay_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_startDay_get(swigCPtr);
      return ret;
    } 
  }

  public int startHour {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_startHour_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_startHour_get(swigCPtr);
      return ret;
    } 
  }

  public int startMinute {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_startMinute_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_startMinute_get(swigCPtr);
      return ret;
    } 
  }

  public int endYear {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_endYear_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_endYear_get(swigCPtr);
      return ret;
    } 
  }

  public int endMonth {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_endMonth_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_endMonth_get(swigCPtr);
      return ret;
    } 
  }

  public int endDay {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_endDay_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_endDay_get(swigCPtr);
      return ret;
    } 
  }

  public int endHour {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_endHour_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_endHour_get(swigCPtr);
      return ret;
    } 
  }

  public int endMinute {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_endMinute_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_endMinute_get(swigCPtr);
      return ret;
    } 
  }

  public int dayMask {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_dayMask_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_dayMask_get(swigCPtr);
      return ret;
    } 
  }

  public int frequency {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_frequency_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_frequency_get(swigCPtr);
      return ret;
    } 
  }

  public StringArray paZones {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_paZones_set(swigCPtr, StringArray.getCPtr(value));
    } 
    get {
      IntPtr cPtr = netspireSDKPINVOKE.ScheduleDefinition_paZones_get(swigCPtr);
      StringArray ret = (cPtr == IntPtr.Zero) ? null : new StringArray(cPtr, false);
      return ret;
    } 
  }

  public AnnouncementPriorityMode priorityMode {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_priorityMode_set(swigCPtr, (int)value);
    } 
    get {
      AnnouncementPriorityMode ret = (AnnouncementPriorityMode)netspireSDKPINVOKE.ScheduleDefinition_priorityMode_get(swigCPtr);
      return ret;
    } 
  }

  public int priorityLevel {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_priorityLevel_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_priorityLevel_get(swigCPtr);
      return ret;
    } 
  }

  public AnnouncementType announcementType {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_announcementType_set(swigCPtr, (int)value);
    } 
    get {
      AnnouncementType ret = (AnnouncementType)netspireSDKPINVOKE.ScheduleDefinition_announcementType_get(swigCPtr);
      return ret;
    } 
  }

  public AnnouncementType visualAnnouncementType {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_visualAnnouncementType_set(swigCPtr, (int)value);
    } 
    get {
      AnnouncementType ret = (AnnouncementType)netspireSDKPINVOKE.ScheduleDefinition_visualAnnouncementType_get(swigCPtr);
      return ret;
    } 
  }

  public NumberArray dictionaryItems {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_dictionaryItems_set(swigCPtr, NumberArray.getCPtr(value));
    } 
    get {
      IntPtr cPtr = netspireSDKPINVOKE.ScheduleDefinition_dictionaryItems_get(swigCPtr);
      NumberArray ret = (cPtr == IntPtr.Zero) ? null : new NumberArray(cPtr, false);
      return ret;
    } 
  }

  public int repeatCnt {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_repeatCnt_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_repeatCnt_get(swigCPtr);
      return ret;
    } 
  }

  public TTSVocalizerArray ttsList {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_ttsList_set(swigCPtr, TTSVocalizerArray.getCPtr(value));
    } 
    get {
      IntPtr cPtr = netspireSDKPINVOKE.ScheduleDefinition_ttsList_get(swigCPtr);
      TTSVocalizerArray ret = (cPtr == IntPtr.Zero) ? null : new TTSVocalizerArray(cPtr, false);
      return ret;
    } 
  }

  public int storedDataSourceId {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_storedDataSourceId_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_storedDataSourceId_get(swigCPtr);
      return ret;
    } 
  }

  public string storedDataFilePath {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_storedDataFilePath_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.ScheduleDefinition_storedDataFilePath_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string displayTemplateName {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_displayTemplateName_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.ScheduleDefinition_displayTemplateName_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t displayTemplateKeyValueList {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_displayTemplateKeyValueList_set(swigCPtr, SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = netspireSDKPINVOKE.ScheduleDefinition_displayTemplateKeyValueList_get(swigCPtr);
      SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t(cPtr, false);
      return ret;
    } 
  }

  public int displayTemplateValidityPeriodSeconds {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_displayTemplateValidityPeriodSeconds_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.ScheduleDefinition_displayTemplateValidityPeriodSeconds_get(swigCPtr);
      return ret;
    } 
  }

  public double gain {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_gain_set(swigCPtr, value);
    } 
    get {
      double ret = netspireSDKPINVOKE.ScheduleDefinition_gain_get(swigCPtr);
      return ret;
    } 
  }

  public string chime {
    set {
      netspireSDKPINVOKE.ScheduleDefinition_chime_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.ScheduleDefinition_chime_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
