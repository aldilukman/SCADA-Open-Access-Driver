/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class CallPartyInfo : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CallPartyInfo(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CallPartyInfo obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CallPartyInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_CallPartyInfo(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public CallPartyInfo() : this(netspireSDKPINVOKE.new_CallPartyInfo__SWIG_0(), true) {
  }

  public CallPartyInfo(CallPartyInfo callPartyInfoAnother) : this(netspireSDKPINVOKE.new_CallPartyInfo__SWIG_1(CallPartyInfo.getCPtr(callPartyInfoAnother)), true) {
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

  public int streamNo {
    set {
      netspireSDKPINVOKE.CallPartyInfo_streamNo_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.CallPartyInfo_streamNo_get(swigCPtr);
      return ret;
    } 
  }

  public int srcDst {
    set {
      netspireSDKPINVOKE.CallPartyInfo_srcDst_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.CallPartyInfo_srcDst_get(swigCPtr);
      return ret;
    } 
  }

  public int callType {
    set {
      netspireSDKPINVOKE.CallPartyInfo_callType_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.CallPartyInfo_callType_get(swigCPtr);
      return ret;
    } 
  }

  public string callTypeStr {
    set {
      netspireSDKPINVOKE.CallPartyInfo_callTypeStr_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.CallPartyInfo_callTypeStr_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string callFromDst {
    set {
      netspireSDKPINVOKE.CallPartyInfo_callFromDst_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.CallPartyInfo_callFromDst_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string callToDst {
    set {
      netspireSDKPINVOKE.CallPartyInfo_callToDst_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.CallPartyInfo_callToDst_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string callAlertingDestinations {
    set {
      netspireSDKPINVOKE.CallPartyInfo_callAlertingDestinations_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.CallPartyInfo_callAlertingDestinations_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int callState {
    set {
      netspireSDKPINVOKE.CallPartyInfo_callState_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.CallPartyInfo_callState_get(swigCPtr);
      return ret;
    } 
  }

  public string callStateStr {
    set {
      netspireSDKPINVOKE.CallPartyInfo_callStateStr_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.CallPartyInfo_callStateStr_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string broadcastAddr {
    set {
      netspireSDKPINVOKE.CallPartyInfo_broadcastAddr_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.CallPartyInfo_broadcastAddr_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int broadcastPort {
    set {
      netspireSDKPINVOKE.CallPartyInfo_broadcastPort_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.CallPartyInfo_broadcastPort_get(swigCPtr);
      return ret;
    } 
  }

  public bool isMulticast {
    set {
      netspireSDKPINVOKE.CallPartyInfo_isMulticast_set(swigCPtr, value);
    } 
    get {
      bool ret = netspireSDKPINVOKE.CallPartyInfo_isMulticast_get(swigCPtr);
      return ret;
    } 
  }

}

}
