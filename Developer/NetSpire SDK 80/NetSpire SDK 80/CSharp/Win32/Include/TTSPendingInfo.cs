/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class TTSPendingInfo : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TTSPendingInfo(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TTSPendingInfo obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~TTSPendingInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_TTSPendingInfo(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int portNo {
    set {
      netspireSDKPINVOKE.TTSPendingInfo_portNo_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.TTSPendingInfo_portNo_get(swigCPtr);
      return ret;
    } 
  }

  public string language {
    set {
      netspireSDKPINVOKE.TTSPendingInfo_language_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TTSPendingInfo_language_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string voice {
    set {
      netspireSDKPINVOKE.TTSPendingInfo_voice_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TTSPendingInfo_voice_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int rate {
    set {
      netspireSDKPINVOKE.TTSPendingInfo_rate_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.TTSPendingInfo_rate_get(swigCPtr);
      return ret;
    } 
  }

  public string text {
    set {
      netspireSDKPINVOKE.TTSPendingInfo_text_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TTSPendingInfo_text_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_time_t startTime {
    set {
      netspireSDKPINVOKE.TTSPendingInfo_startTime_set(swigCPtr, SWIGTYPE_p_time_t.getCPtr(value));
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_time_t ret = new SWIGTYPE_p_time_t(netspireSDKPINVOKE.TTSPendingInfo_startTime_get(swigCPtr), true);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public TTSPendingInfo() : this(netspireSDKPINVOKE.new_TTSPendingInfo__SWIG_0(), true) {
  }

  public TTSPendingInfo(int portNo, string language, string voice, int rate, string text, SWIGTYPE_p_time_t startTime) : this(netspireSDKPINVOKE.new_TTSPendingInfo__SWIG_1(portNo, language, voice, rate, text, SWIGTYPE_p_time_t.getCPtr(startTime)), true) {
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
