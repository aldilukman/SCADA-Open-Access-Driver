/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class TerminalInfo : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TerminalInfo(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TerminalInfo obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~TerminalInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_TerminalInfo(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public TerminalInfo() : this(netspireSDKPINVOKE.new_TerminalInfo__SWIG_0(), true) {
  }

  public TerminalInfo(TerminalInfo terminalInfoAnother) : this(netspireSDKPINVOKE.new_TerminalInfo__SWIG_1(TerminalInfo.getCPtr(terminalInfoAnother)), true) {
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

  public int termId {
    set {
      netspireSDKPINVOKE.TerminalInfo_termId_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.TerminalInfo_termId_get(swigCPtr);
      return ret;
    } 
  }

  public string termInfo {
    set {
      netspireSDKPINVOKE.TerminalInfo_termInfo_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TerminalInfo_termInfo_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string termAddress {
    set {
      netspireSDKPINVOKE.TerminalInfo_termAddress_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TerminalInfo_termAddress_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string termType {
    set {
      netspireSDKPINVOKE.TerminalInfo_termType_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TerminalInfo_termType_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string termLocation {
    set {
      netspireSDKPINVOKE.TerminalInfo_termLocation_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TerminalInfo_termLocation_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string termDescription {
    set {
      netspireSDKPINVOKE.TerminalInfo_termDescription_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TerminalInfo_termDescription_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int termState {
    set {
      netspireSDKPINVOKE.TerminalInfo_termState_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.TerminalInfo_termState_get(swigCPtr);
      return ret;
    } 
  }

  public string termStateText {
    set {
      netspireSDKPINVOKE.TerminalInfo_termStateText_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TerminalInfo_termStateText_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int termConnectedToPartyId {
    set {
      netspireSDKPINVOKE.TerminalInfo_termConnectedToPartyId_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.TerminalInfo_termConnectedToPartyId_get(swigCPtr);
      return ret;
    } 
  }

  public int termOnHoldByPartyId {
    set {
      netspireSDKPINVOKE.TerminalInfo_termOnHoldByPartyId_set(swigCPtr, value);
    } 
    get {
      int ret = netspireSDKPINVOKE.TerminalInfo_termOnHoldByPartyId_get(swigCPtr);
      return ret;
    } 
  }

  public string termCameraFeedURL {
    set {
      netspireSDKPINVOKE.TerminalInfo_termCameraFeedURL_set(swigCPtr, value);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = netspireSDKPINVOKE.TerminalInfo_termCameraFeedURL_get(swigCPtr);
      if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
