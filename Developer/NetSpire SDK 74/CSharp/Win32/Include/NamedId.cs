/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace netspire {

using System;
using System.Runtime.InteropServices;

public class NamedId : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NamedId(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(NamedId obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~NamedId() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          netspireSDKPINVOKE.delete_NamedId(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public NamedId() : this(netspireSDKPINVOKE.new_NamedId__SWIG_0(), true) {
  }

  public NamedId(int id) : this(netspireSDKPINVOKE.new_NamedId__SWIG_1(id), true) {
  }

  public int getId() {
    int ret = netspireSDKPINVOKE.NamedId_getId(swigCPtr);
    return ret;
  }

  public void setName(string name) {
    netspireSDKPINVOKE.NamedId_setName(swigCPtr, name);
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
    string ret = netspireSDKPINVOKE.NamedId_getName(swigCPtr);
    return ret;
  }

  public void setAbrv(string abrv) {
    netspireSDKPINVOKE.NamedId_setAbrv(swigCPtr, abrv);
    if (netspireSDKPINVOKE.SWIGPendingException.Pending) throw netspireSDKPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getAbrv() {
    string ret = netspireSDKPINVOKE.NamedId_getAbrv(swigCPtr);
    return ret;
  }

}

}
